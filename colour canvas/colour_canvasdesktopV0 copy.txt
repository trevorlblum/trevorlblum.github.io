<!DOCTYPE html>
<!-- 
27/11/2024 pick and drop working. Now do perceptual compare across reference strip.
26/11/2024 Puzzle on startup, canvas2 and 3 do not display on load, only on refresh/reload
and not fixed by localhost server. Some mods BTW fail to display canvases in Chrome or Safari on refresh. Removed plotly but no change to this behaviour.
25/11/2024 modified for testing bigger colour patch, repositioned. fixed reference position
10/9/2024 sets pickcolour from mouseY pos.
9/9/2024 pick with press , drop with release. Mousemove event in canvas commented out.
8/9/2024 Dragging and dropping to canvas3. Mouse drop coords relative to canvas3 coords.
27/8/2024 trouble getting text color to change. Forced document.getElementById("notes").style.color='#03f7ff';
27/8/2024 added canvas crosshair cursor on mouse move/press and concatenated readout to 'notes'
-->
<html
><title> Coloured canvas desktop version </title>
<head>
	<!-- Load plotly.js into the DOM -->
	<script src='https://cdn.plot.ly/plotly-2.34.0.min.js'></script>
        <script src="cie_rgb_converter.js"></script>

</head>

<body >
<h4>May fail on load, try a refresh if no images on screen<br></H4>
<canvas id="canvas2" width="50px" height="875px" draggable="true"></canvas>
<canvas id="canvas3" width="780px" height="880px" ondrop="dropit(event)" ondragover="allowDrop(event)"></canvas>
<canvas id="canvas" width="400px" height="400px" ></canvas>

<p id="hovered-color"</p>
<p id="selected-color"</p>

<p id="notes"></p> 
</body>
<script>
const shownotes=true;

var rgbColor;
var dropcolour;
var pickcolour;

const canvas2 = document.getElementById("canvas2");//canvas2 shows picked colour for drag/drop
canvas2.addEventListener("click", (event) => pick(event, selectedColor));

const ctx2 = canvas2.getContext("2d");
//ctx2.fillStyle="orange";
//ctx2.fillRect(0,0,50,850);
img2=new Image();
img2.src="one_strip_max.png";
ctx2.drawImage(img2, 0, 0);

const canvas3 = document.getElementById("canvas3");//canvas3 shows reference image
const ctx3 = canvas3.getContext("2d");
//ctx3.fillStyle="yellow";
//ctx3.fillRect(0,0,650,850);
img=new Image();
img.src="reference.png";
ctx3.drawImage(img, 0, 0);

const hoveredColor = document.getElementById("hovered-color");
const selectedColor = document.getElementById("selected-color");// 
// =====================end of javascript mainline code================================

function allowDrop(ev) {
  ev.preventDefault();
}
function drag(ev){
  alert("drag invoked");
}

function pick(event, destination) {
  const bounding = canvas2.getBoundingClientRect();
  const x = event.clientX - bounding.left;
  const y = event.clientY - bounding.top;
  document.getElementById("canvas2").style.cursor="crosshair";
var data=ctx2.getImageData(x,y,1,1).data;   //pick pixel colour at mouse coords
var colour=[data[0],data[1],data[2]];
//alert("pick coords "+x+","+y+"pixel data "+ data[0]+","+data[1]+","+data[2]);
pickcolour="rgb("+data[0]+","+data[1]+","+data[2]+")"; 
rgbColor=data[0]<<24||data[1]<<16||data[2]<<8||data[3]; 

//alert("pick text colour "+'rgb('+data[0]+","+data[1]+","+data[2]+')');
ctx2.fillStyle='rgb('+data[0]+","+data[1]+","+data[2]+')';
ctx2.fillRect(0,0,50,20);
ctx2.strokeStyle='white';ctx2.lineWidth="2";ctx2.rect(0,0,50,20);ctx2.stroke();
document.getElementById("notes").style.color='rgb('+colour+')'; //write note in colour
//if(shownotes)document.getElementById("notes").innerHTML=" Image data[0-3]"+data[0]+"R "+data[1]+"G "+data[2]+"B "+imageData.data[3]+"A";

//alert("(notes).style.color "+document.getElementById("notes").style.color);

  destination.style.background = rgbColor;//'destination is null'
//  if(shownotes)destination.textContent = rgbColor;
 return rgbColor;
}

function dropit(ev){
//alert("dropit");
  dropX=ev.clientX-80;
  dropY=ev.clientY-80;
  ev.preventDefault();
  dropcolour=
  ctx3.drawImage(img, 0, 0);
  ctx3.fillStyle=pickcolour;
  ctx3.fillRect(dropX,dropY,40,40);
  ctx3.fillStyle='rgb(0,0,0)';
  ctx3.fillRect(dropX+10,dropY+15,15,10);
  var dropcolour=ctx3.getImageData(x,y,1,1).data;
  if(pickcolour-dropcolour>1000)alert("pick and drop colours ",pickcolour,dropcolour);
};

</script>
</html>

